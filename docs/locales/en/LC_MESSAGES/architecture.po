# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, NtechLab
# This file is distributed under the same license as the FindFace Security
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: FindFace Security 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-24 17:48+0700\n"
"PO-Revision-Date: 2018-08-29 15:15+0700\n"
"Last-Translator: \n"
"Language: en\n"
"Language-Team: \n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"X-Generator: Poedit 2.1.1\n"

#: ../docs/architecture.rst:5
msgid "Архитектура"
msgstr "Architecture"

#: ../docs/architecture.rst:7
msgid ""
"FindFace Security развертывается на одиночном сервере или нескольких серверах."
msgstr ""
"FindFace Security is deployed on a single host (standalone) or in a cluster "
"environment."

#: ../docs/architecture.rst:10
msgid "См. :ref:`requirements`."
msgstr "See :ref:`requirements`."

#: ../docs/architecture.rst:12
msgid ""
"Для установки FindFace Security используются следующие установочные пакеты:"
msgstr "FindFace Security is delivered in the following distributable packages:"

#: ../docs/architecture.rst:14
msgid "Пакет с компонентами :program:`<findface-security-repo>.deb`."
msgstr ""
"A package with the FindFace Security components :program:`<findface-security-"
"repo>.deb`."

#: ../docs/architecture.rst:15
msgid ""
"Пакеты с моделями нейронных сетей для извлечения биометрических образцов лиц :"
"program:`<findface-data>.deb`."
msgstr ""
"Packages with the biometric neural network models :program:`<findface-data>."
"deb`."

#: ../docs/architecture.rst:17
msgid ""
"Данные пакеты могут поставляться отдельно (как есть) либо в составе "
"инсталлятора."
msgstr "The packages are delivered as is, or as part of the installer."

#: ../docs/architecture.rst:20
msgid ""
"Работоспособность FindFace Security обеспечивается взаимодействием следующих "
"компонентов:"
msgstr ""
"The FindFace Security functioning is provided by interaction of the following "
"components:"

#: ../docs/architecture.rst:1
msgid "Компонент"
msgstr "Component"

#: ../docs/architecture.rst:1
msgid "Описание"
msgstr "Description"

#: ../docs/_tables/components.csv:1
msgid "PostgreSQL"
msgstr "PostgreSQL"

#: ../docs/_tables/components.csv:1
msgid ""
"База данных (СУБД), в которой хранятся детализированные досье персон с "
"разбиением по категориям (спискам наблюдения), биометрические данные персон, "
"а также все события распознавания лиц. Помимо этого, в базе данных хранится "
"информация внутреннего характера: профили пользователей FindFace Security, "
"данные видеокамер и пр. Устанавливается из репозитория Ubuntu (наряду с "
"Redis)."
msgstr ""
"A database which stores detailed and categorized dossiers on particular "
"persons, their biometric data, and face recognition events. It also stores "
"data for internal use such as user accounts and camera settings. To be "
"installed from the Ubuntu repository (along with Redis)."

#: ../docs/_tables/components.csv:1
msgid "``ffsecurity``"
msgstr "``ffsecurity``"

#: ../docs/_tables/components.csv:1
msgid ""
"Сервис, который связывает воедино все компоненты FindFace Security, "
"обеспечивая функционирование системы. Включает в себя сервисы ``findface-"
"security-proto`` (отвечает за HTTP и web-сокет) и ``findface-security-"
"worker`` (обеспечивает взаимодействие остальных компонентов системы). "
"Получает от сервиса ``video-worker`` нормализованное изображение, полный кадр "
"и мета-данные обнаруженного лица. Перенаправляет нормализованное изображение "
"лица в сервис ``extraction-api`` для извлечения биометрического образца. "
"Полученный биометрический образец используется для поиска наиболее схожих лиц "
"в списках наблюдения с помощью сервиса ``findface-postgres-facen``. После "
"этого событие обнаружения лица записывается в базу данных PostgreSQL вместе с "
"результатом поиска и отображается в веб-интерфейсе. Систему можно настроить "
"таким образом, что событие будет записываться и отображаться в веб-интерфейсе "
"только в том случае, если степень схожести обнаруженного лица и лица из "
"какого-либо досье превышает предустановленное пороговое значение, т. е. если "
"лица совпадают  (параметр ``IGNORE_UNMATCHED`` в файле ``/etc/ffsecurity/"
"config.py``, см. :ref:`basic-deployment`). Сервис ``ffsecurity`` также "
"отвечает за поиск лиц в базе событий."
msgstr ""
"A service which interfaces with all the components to provide the system "
"functioning. Includes ``findface-security-proto`` (provides HTTP and web "
"socket) and ``findface-security-worker`` (provides interaction between the "
"other system components). First, ``findface-security`` gets a normalized "
"image, full frame, and meta data of a detected face from ``video-worker``. It "
"then redirects the normalized image to the ``extraction-api`` service to "
"extract biometric data. The ``findface-postgres-facen`` extension uses the "
"face biometric data to find a set of most similar faces in the dossiers. The "
"face recognition event along with the search result is then saved into the "
"PostgreSQL database. You can configure your system to save and display an "
"event only if the similarity between a detected face and some face in the "
"dossiers exceeds a pre-defined threshold, i. e. the faces match (the "
"``IGNORE_UNMATCHED`` option at ``/etc/ffsecurity/config.py``, see :ref:`basic-"
"deployment`). The ``ffsecurity`` service also provides a search engine that "
"searches the event database for a given face."

#: ../docs/_tables/components.csv:1
msgid "``videomanager-api``"
msgstr "``videomanager-api``"

#: ../docs/_tables/components.csv:1
msgid ""
"Сервис, являющийся частью модуля видеодетекции лиц, через который "
"осуществляется управление детекцией лиц на видео, а именно задаются настройки "
"и список видеопотоков для обработки. Взаимодействует с сервисом ``video-"
"worker``."
msgstr ""
"A service, part of the video face detection module, that is used for managing "
"the video face detection functionality. Use it to configure the video face "
"detector settings and to specify the list of video streams to process."

#: ../docs/_tables/components.csv:1
msgid "``video-worker``"
msgstr "``video-worker``"

#: ../docs/_tables/components.csv:1
msgid ""
"Сервис, являющийся частью модуля видеодетекции лиц, который обнаруживает лицо "
"«на лету» в видеопотоке или видеофайле и отправляет его нормализованное "
"изображение, полный кадр и мета-данные, такие как ID камеры и метку времени "
"обнаружения, в сервис ``ffsecurity``."
msgstr ""
"A service, part of the video face detection module, which recognizes a face "
"in video and posts its normalized image, full frame and meta data (such as "
"the camera ID and detection time) to the ``ffsecurity`` service."

#: ../docs/_tables/components.csv:1
msgid "``extraction-api``"
msgstr "``extraction-api``"

#: ../docs/_tables/components.csv:1
msgid ""
"Сервис, который используется для извлечения биометрического образца (вектора "
"признаков) лица. Для работы необходимы пакеты c моделями нейронных сетей :"
"program:`<findface-data>.deb`."
msgstr ""
"A service which extracts face biometric data (feature vector). Requires the "
"packages with the neural network models :program:`<findface-data>.deb`."

#: ../docs/_tables/components.csv:1
msgid "``findface-postgres-facen``"
msgstr "``findface-postgres-facen``"

#: ../docs/_tables/components.csv:1
msgid ""
"Расширение к базе данных :program:`PostgreSQL`, которое используется для "
"вычисления степени схожести обнаруженного лица с лицами из досье путем "
"сравнения биометрических образцов."
msgstr ""
"A :program:`PostgreSQL` extension which calculates similarity between a newly "
"detected face and faces in the dossiers, by comparing their biometric data."

#: ../docs/_tables/components.csv:1
msgid "Веб-интерфейс"
msgstr "Web interface"

#: ../docs/_tables/components.csv:1
msgid ""
"Веб-интерфейс ``ffsecurity-ui`` используется для отображения результатов "
"работы системы распознавания лиц, управления видеокамерами, пользователями, "
"ведения списков наблюдения, поиска лиц в базе событий, досье и социальных "
"сетях."
msgstr ""
"Use the web interface (``ffsecurity-ui``) to work with face recognition "
"events, search the event and dossier database and social networks for faces, "
"and to manage cameras, users, dossiers, and watch lists."

#: ../docs/_tables/components.csv:1
msgid "``NTLS``"
msgstr "``NTLS``"

#: ../docs/_tables/components.csv:1
msgid ""
"Локальный сервер лицензий с управлением через веб-интерфейс, "
"взаимодействующий для верификации лицензий с глобальным сервером лицензий "
"NtechLab или аппаратным лицензионным ключом."
msgstr ""
"A local license server which interfaces with the NtechLab Global License "
"Server or a USB dongle to verify a license."

#: ../docs/_tables/components.csv:1
msgid "``etcd``"
msgstr "``etcd``"

#: ../docs/_tables/components.csv:1
msgid ""
"Стороннее программное обеспечение, реализующее распределенное хранилище "
"ключей для компонента ``videomanager-api``. Используется в качестве "
"координационной службы в распределенной системе, обеспечивая "
"отказоустойчивость модуля видеодетекции лиц."
msgstr ""
"Third-party software that implements a distributed key-value store for the "
"``videomanager-api`` component. Used as a coordination service in the "
"distributed system, providing the video face detector with fault tolerance."

#: ../docs/architecture.rst:30
msgid "Работа с FindFace Security выполняется через веб-интерфейс."
msgstr "Use the web interface to work with FindFace Security."

#: ../docs/architecture.rst:33
msgid ""
"Для очистки базы данных от устаревших событий используйте :ref:`утилиту "
"<event-cleaner>` ``event-cleaner``."
msgstr ""
"To purge old events from the database, use the ``event-cleaner`` :ref:"
"`utility <event-cleaner>`."
